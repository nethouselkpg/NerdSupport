<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="e7c95c8a-3aa2-459b-b3ef-b60135412455" name="NerdSupport (2012-02-21 12:36:14)" runUser="GROUP\jpersson" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="NerdSupport" id="a677183a-2241-46a2-8e6f-b1b8040dce34">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="NerdSupport _2012-02-21 12_36_14_">
      <DeploymentItem filename="C:\Projects\NerdSupport.nethouselkpg\Lib\TechTalk.SpecFlow.dll" />
    </Deployment>
    <NamingScheme baseName="NerdSupport" useDefault="false" />
    <Execution>
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution>
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
      </TestTypeSpecific>
      <AgentRule name="LocalMachineDefaultRole">
        <DataCollectors>
          <DataCollector uri="datacollector://microsoft/CodeCoverage/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.CodeCoverage.CoveragePlugIn, Microsoft.VisualStudio.QualityTools.Plugins.CodeCoverage, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="Code Coverage">
            <Configuration>
              <CodeCoverage xmlns="">
                <AspNet>
                  <AspNetCodeCoverageItem id="67c8b33c-a6ae-421f-bf79-3fb8f37a64c0" name="NerdDinner" applicationRoot="/" url="http://localhost:0/" />
                </AspNet>
              </CodeCoverage>
            </Configuration>
          </DataCollector>
        </DataCollectors>
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-02-21T12:36:14.8883129+01:00" queuing="2012-02-21T12:36:16.1264367+01:00" start="2012-02-21T12:36:16.2064447+01:00" finish="2012-02-21T12:36:19.1997440+01:00" />
  <ResultSummary outcome="Error">
    <Counters total="3" executed="3" error="0" failed="0" timeout="0" aborted="0" inconclusive="3" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
    <RunInfos>
      <RunInfo computerName="PC260" outcome="Warning" timestamp="2012-02-21T12:36:14.9763217+01:00">
        <Text>Cannot open the ASP.NET project 'NerdDinner'.</Text>
      </RunInfo>
      <RunInfo computerName="PC260" outcome="Warning" timestamp="2012-02-21T12:36:15.0573298+01:00">
        <Text>Instrumentation error: cannot find binary C:\Projects\NerdSupport.nethouselkpg\NerdDinner.Tests\bin\Debug\NerdDinner.Tests.dll.</Text>
      </RunInfo>
      <RunInfo computerName="PC260" outcome="Error" timestamp="2012-02-21T12:36:16.8875128+01:00">
        <Text>Cannot find the local Web page 'NerdDinner'.</Text>
      </RunInfo>
    </RunInfos>
    <ResultFiles>
      <ResultFile path="PC260\data.coverage" />
    </ResultFiles>
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="AllaReglerArBrutna" storage="c:\projects\nerdsupport.nethouselkpg\specs\nerdsupport.specs\bin\debug\nerdsupport.specs.dll" id="18da6446-ff3a-227f-dddf-1e2a341c0009">
      <Description>Alla regler är brutna</Description>
      <Execution id="7b73992f-c8f1-426e-be22-75546b035071" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Prioritering av arenden</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Projects/NerdSupport.nethouselkpg/Specs/NerdSupport.Specs/bin/Debug/NerdSupport.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature, NerdSupport.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AllaReglerArBrutna" />
    </UnitTest>
    <UnitTest name="IngaReglerBrutna" storage="c:\projects\nerdsupport.nethouselkpg\specs\nerdsupport.specs\bin\debug\nerdsupport.specs.dll" id="becc6575-fc69-eeef-d435-b2e604e675f8">
      <Description>Inga regler brutna</Description>
      <Execution id="24d54998-614c-48e4-a098-ffe00f4b64a4" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Prioritering av arenden</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Projects/NerdSupport.nethouselkpg/Specs/NerdSupport.Specs/bin/Debug/NerdSupport.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature, NerdSupport.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="IngaReglerBrutna" />
    </UnitTest>
    <UnitTest name="EnRegelArBruten" storage="c:\projects\nerdsupport.nethouselkpg\specs\nerdsupport.specs\bin\debug\nerdsupport.specs.dll" id="6349ddd1-ceb5-e9e9-ef74-8a4f9939307d">
      <Description>En regel är bruten</Description>
      <Execution id="0236b5de-4e50-4b56-a5c2-dfff9c25e2d8" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Prioritering av arenden</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Projects/NerdSupport.nethouselkpg/Specs/NerdSupport.Specs/bin/Debug/NerdSupport.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature, NerdSupport.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="EnRegelArBruten" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="18da6446-ff3a-227f-dddf-1e2a341c0009" executionId="7b73992f-c8f1-426e-be22-75546b035071" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6349ddd1-ceb5-e9e9-ef74-8a4f9939307d" executionId="0236b5de-4e50-4b56-a5c2-dfff9c25e2d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="becc6575-fc69-eeef-d435-b2e604e675f8" executionId="24d54998-614c-48e4-a098-ffe00f4b64a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="7b73992f-c8f1-426e-be22-75546b035071" testId="18da6446-ff3a-227f-dddf-1e2a341c0009" testName="AllaReglerArBrutna" computerName="PC260" duration="00:00:00.0798650" startTime="2012-02-21T12:36:17.2135454+01:00" endTime="2012-02-21T12:36:17.6475888+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b73992f-c8f1-426e-be22-75546b035071">
      <Output>
        <StdOut>Givet att följande regler är kopplade till Nethouse avtal
  --- table step argument ---
  | Namn | Prioritetsklassificering |
  | Tid  | 3                        |
  | Pris | 1                        |
  | VIP  | 2                        |
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"att följande regler är kopplade till Nethouse avtal")]
        public void GivetAttFoljandeReglerArKoppladeTillNethouseAvtal(Table table)
        {
            ScenarioContext.Current.Pending();
        }
    }

Givet att alla regler är brutna
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"att alla regler är brutna")]
        public void GivetAttAllaReglerArBrutna()
        {
            ScenarioContext.Current.Pending();
        }
    }

När handläggaren granskar ärendets prioritet
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"handläggaren granskar ärendets prioritet")]
        public void NarHandlaggarenGranskarArendetsPrioritet()
        {
            ScenarioContext.Current.Pending();
        }
    }

Så är ärendets prioritetsklassificering 1
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"är ärendets prioritetsklassificering 1")]
        public void SaArArendetsPrioritetsklassificering1()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"att alla regler är brutna")]
    public void GivetAttAllaReglerArBrutna()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"att följande regler är kopplade till Nethouse avtal")]
    public void GivetAttFoljandeReglerArKoppladeTillNethouseAvtal(Table table)
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"är ärendets prioritetsklassificering 1")]
    public void SaArArendetsPrioritetsklassificering1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"handläggaren granskar ärendets prioritet")]
    public void NarHandlaggarenGranskarArendetsPrioritet()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature.ScenarioCleanup() in C:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\PrioriteringAvArende.feature.cs:line 0
   at NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature.AllaReglerArBrutna() in c:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\PrioriteringAvArende.feature:line 25
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0236b5de-4e50-4b56-a5c2-dfff9c25e2d8" testId="6349ddd1-ceb5-e9e9-ef74-8a4f9939307d" testName="EnRegelArBruten" computerName="PC260" duration="00:00:00.0130439" startTime="2012-02-21T12:36:17.6495890+01:00" endTime="2012-02-21T12:36:17.6675908+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0236b5de-4e50-4b56-a5c2-dfff9c25e2d8">
      <Output>
        <StdOut>Givet att följande regler är kopplade till Nethouse avtal
  --- table step argument ---
  | Namn | Prioritetsklassificering |
  | Tid  | 3                        |
  | Pris | 1                        |
  | VIP  | 2                        |
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"att följande regler är kopplade till Nethouse avtal")]
        public void GivetAttFoljandeReglerArKoppladeTillNethouseAvtal(Table table)
        {
            ScenarioContext.Current.Pending();
        }
    }

Givet att VIP regeln bryts
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"att VIP regeln bryts")]
        public void GivetAttVIPRegelnBryts()
        {
            ScenarioContext.Current.Pending();
        }
    }

När handläggaren granskar ärendets prioritet
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"handläggaren granskar ärendets prioritet")]
        public void NarHandlaggarenGranskarArendetsPrioritet()
        {
            ScenarioContext.Current.Pending();
        }
    }

Så är ärendets prioritetsklassificering 2
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"är ärendets prioritetsklassificering 2")]
        public void SaArArendetsPrioritetsklassificering2()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"att följande regler är kopplade till Nethouse avtal")]
    public void GivetAttFoljandeReglerArKoppladeTillNethouseAvtal(Table table)
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"att VIP regeln bryts")]
    public void GivetAttVIPRegelnBryts()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"är ärendets prioritetsklassificering 2")]
    public void SaArArendetsPrioritetsklassificering2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"handläggaren granskar ärendets prioritet")]
    public void NarHandlaggarenGranskarArendetsPrioritet()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature.ScenarioCleanup() in C:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\PrioriteringAvArende.feature.cs:line 0
   at NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature.EnRegelArBruten() in c:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\PrioriteringAvArende.feature:line 20
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="24d54998-614c-48e4-a098-ffe00f4b64a4" testId="becc6575-fc69-eeef-d435-b2e604e675f8" testName="IngaReglerBrutna" computerName="PC260" duration="00:00:00.0115125" startTime="2012-02-21T12:36:17.6695910+01:00" endTime="2012-02-21T12:36:17.6845925+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="24d54998-614c-48e4-a098-ffe00f4b64a4">
      <Output>
        <StdOut>Givet att följande regler är kopplade till Nethouse avtal
  --- table step argument ---
  | Namn | Prioritetsklassificering |
  | Tid  | 3                        |
  | Pris | 1                        |
  | VIP  | 2                        |
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"att följande regler är kopplade till Nethouse avtal")]
        public void GivetAttFoljandeReglerArKoppladeTillNethouseAvtal(Table table)
        {
            ScenarioContext.Current.Pending();
        }
    }

Givet att inga regler är brutna
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"att inga regler är brutna")]
        public void GivetAttIngaReglerArBrutna()
        {
            ScenarioContext.Current.Pending();
        }
    }

När handläggaren granskar ärendets prioritet
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"handläggaren granskar ärendets prioritet")]
        public void NarHandlaggarenGranskarArendetsPrioritet()
        {
            ScenarioContext.Current.Pending();
        }
    }

Så är ärendets prioritetsklassificering nollställd
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"är ärendets prioritetsklassificering nollställd")]
        public void SaArArendetsPrioritetsklassificeringNollstalld()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"att följande regler är kopplade till Nethouse avtal")]
    public void GivetAttFoljandeReglerArKoppladeTillNethouseAvtal(Table table)
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"att inga regler är brutna")]
    public void GivetAttIngaReglerArBrutna()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"är ärendets prioritetsklassificering nollställd")]
    public void SaArArendetsPrioritetsklassificeringNollstalld()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"handläggaren granskar ärendets prioritet")]
    public void NarHandlaggarenGranskarArendetsPrioritet()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature.ScenarioCleanup() in C:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\PrioriteringAvArende.feature.cs:line 0
   at NerdSupport.Specs.Backlog.PrioriteringAvArendenFeature.IngaReglerBrutna() in c:\Projects\NerdSupport.nethouselkpg\Specs\NerdSupport.Specs\Backlog\PrioriteringAvArende.feature:line 30
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>